<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="org.mum.hotel">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<aop:aspectj-autoproxy/>
	<bean id="theHTraceAdvice" class="org.mum.hotel.service.HTraceAdvice"/>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/hotel?createDatabaseIfNotExist=true" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.mum.hotel.domain" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.import_files">populate.sql</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>



<!-- SET default mail properties -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="25"/>
        <property name="username" value="bibekshrestha@mum.edu"/>
        <property name="password" value="bibek4settings@m"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
     
    <!-- You can have some pre-configured messagess also which are ready to send -->
    <bean id="preConfiguredMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="to" value="bibekshrestha@mum.edu"></property>
        <property name="from" value="bibekshrestha@mum.edu"></property>
        <property name="subject" value="FATAL - Application crash. Save your job !!"/>
    </bean>


	<!-- 
	 <bean id="bookController" class="org.mum.hotel.controller.BookingController"/> 
	<bean id="homeController" class="org.mum.hotel.controller.HomeController"/> 
		<bean id="roomDao" class="org.mum.hotel.dao.RoomDAO"> </bean> <bean id="roomService" 
		class="org.mum.hotel.service.RoomService"> </bean> <bean id="room" class="org.mum.hotel.domain.Room"> 
		</bean> -->

	<!-- bibek -->


	<!-- <bean id="customerDao" class="org.mum.hotel.dao.CustomerDao"/> <bean 
		id="customerService" class="org.mum.hotel.service.CustomerService"/> <bean 
		id="customer" class="org.mum.hotel.domain.Customer"/> -->

	<!-- /bibek -->
<!---->
	<!-- Hibernate SessionFactory -->
	<!-- hibernate Properties -->
	<!-- <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean"> 
		<property name="properties"> <props> <prop key="hibernate.hbm2ddl.auto">create</prop> 
		<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect </prop> 
		<prop key="hibernate.hbm2ddl.import_files">populate.sql</prop> <prop key="hibernate.show_sql">true</prop> 
		</props> </property> </bean> <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="hibernateProperties" 
		ref="hibernateProperties" /> </bean> <tx:annotation-driven transaction-manager="txManager" 
		/> <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->

</beans>
